<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CountryCollection</name>
    </assembly>
    <members>
        <member name="T:CountryCollection">
            <summary>
            Provides the class for a pre-loaded, read-only country collection or a customizable country list instance.
            </summary>
        </member>
        <member name="M:CountryCollection.#ctor">
            <summary>
            Initializes a new instance of the CountryCollection class that contains countries copied from the static CountryCollection object with add/remove capability
            </summary>
        </member>
        <member name="M:CountryCollection.Add(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a country
            </summary>
            <param name="isoAlpha2Code">The ISO aplpha 2 code</param>
            <param name="isoAlpha3Code">The ISO aplpha 3 code</param>
            <param name="isoNumeric">The ISO numeric code</param>
            <param name="isoName">The country name</param>
        </member>
        <member name="M:CountryCollection.Remove(System.String)">
            <summary>
            Removes the country by code
            </summary>
            <param name="code">The country code to remove from the current instance</param>
        </member>
        <member name="M:CountryCollection.GetCountry(System.String)">
            <summary>
            Returns a matching country by code
            </summary>
            <param name="code">The value to find in the CountryCollection.</param>
            <returns>The matching country in the CountryCollection.</returns>
        </member>
        <member name="M:CountryCollection.GetCountry(System.Int32)">
            <summary>
            Returns a matching country by code
            </summary>
            <param name="code">The value to find in the CountryCollection.</param>
            <returns>The matching country in the CountryCollection.</returns>
        </member>
        <member name="M:CountryCollection.Contains(System.String)">
            <summary>
            Determines whether CountryCollection contains a specified code
            </summary>
            <param name="code">The value to check in the CountryCollection.</param>
            <returns>true if the CountryCollection contains a country that has the specified code; otherwise, false.</returns>
        </member>
        <member name="M:CountryCollection.Contains(System.Int32)">
            <summary>
            Determines whether CountryCollection contains a specified code
            </summary>
            <param name="code">The value to check in the CountryCollection.</param>
            <returns>true if the CountryCollection contains a country that has the specified code; otherwise, false.</returns>
        </member>
        <member name="M:CountryCollection.Normalize(System.String)">
            <summary>
            Returns a normalized value from the matching country code.
            </summary>
            <param name="code">The value to normalize</param>
            <returns>The normalized code in the CountryCollection.</returns>
        </member>
        <member name="M:CountryCollection.Normalize(System.Int32)">
            <summary>
            Returns a normalized value from the matching country code.
            </summary>
            <param name="code">The value to normalize</param>
            <returns>The normalized code in the CountryCollection.</returns>
        </member>
        <member name="M:CountryCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:CountryCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:IsoCountriesExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for querying a CountryCollection instance
            </summary>
        </member>
        <member name="M:IsoCountriesExtensions.GetCountry(CountryCollection,System.String)">
            <summary>
            Returns a matching country by code
            </summary>
            <param name="source">The CountryCollection</param>
            <param name="code">The value to find in the CountryCollection.</param>
            <returns>The matching country in the CountryCollection.</returns>
        </member>
        <member name="M:IsoCountriesExtensions.GetCountry(CountryCollection,System.Int32)">
            <summary>
            Returns a matching country by code
            </summary>
            <param name="source">The CountryCollection</param>
            <param name="code">The value to find in the CountryCollection.</param>
            <returns>The matching country in the CountryCollection.</returns>
        </member>
        <member name="M:IsoCountriesExtensions.Contains(CountryCollection,System.String)">
            <summary>
            Determines whether CountryCollection contains a specified code
            </summary>
            <param name="source">The CountryCollection</param>
            <param name="code">The value to check in the CountryCollection.</param>
            <returns>true if the CountryCollection contains a country that has the specified code; otherwise, false.</returns>
        </member>
        <member name="M:IsoCountriesExtensions.Contains(CountryCollection,System.Int32)">
            <summary>
            Determines whether CountryCollection contains a specified code.
            </summary>
            <param name="source">The CountryCollection</param>
            <param name="code">The value to check in the CountryCollection.</param>
            <returns>true if the CountryCollection contains a country that has the specified code; otherwise, false.</returns>
        </member>
        <member name="M:IsoCountriesExtensions.Normalize(CountryCollection,System.String)">
            <summary>
            Returns a normalized value from the matching country code.
            </summary>
            <param name="source">The CountryCollection</param>
            <param name="code">The value to normalize</param>
            <returns>The normalized code in the CountryCollection.</returns>
        </member>
        <member name="M:IsoCountriesExtensions.Normalize(CountryCollection,System.Int32)">
            <summary>
            Returns a normalized value from the matching country code.
            </summary>
            <param name="source">The CountryCollection</param>
            <param name="code">A value to normalize</param>
            <returns>The normalized code in the CountryCollection.</returns>
        </member>
        <member name="T:ShereSoft.ReadOnlyCountryInfo">
            <summary>
            Initializes a new instance of the ReadOnlyCountryInfo class
            </summary>
        </member>
        <member name="P:ShereSoft.ReadOnlyCountryInfo.IsoEnglishShortName">
            <summary>
            ISO English Short Name
            </summary>
        </member>
        <member name="P:ShereSoft.ReadOnlyCountryInfo.IsoAlpha2Code">
            <summary>
            ISO Alpha 2 Code
            </summary>
        </member>
        <member name="P:ShereSoft.ReadOnlyCountryInfo.IsoAlpha3Code">
            <summary>
            ISO Alpha 3 Code
            </summary>
        </member>
        <member name="P:ShereSoft.ReadOnlyCountryInfo.IsoNumeric">
            <summary>
            ISO Numeric Code
            </summary>
        </member>
        <member name="P:ShereSoft.ReadOnlyCountryInfo.Name">
            <summary>
            General name
            </summary>
        </member>
        <member name="M:ShereSoft.ReadOnlyCountryInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:ShereSoft.ReadOnlyCountryInfo.GetHashCode">
            <summary>
            Returns the hash code for this country info.
            </summary>
            <returns>A hash code for the current country info.</returns>
        </member>
    </members>
</doc>
